{
  "$schema": "http://json.schemastore.org/template",
  "author": "Skyline Communications",
  "classifications": [
    "DataMiner"
  ],
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "identity": "Skyline.DataMiner.Package.Project.Template",
  "name": "DataMiner Package Project",
  "shortName": "dataminer-package-project",
  "sourceName": "$SCRIPTNAME$",
  "symbols": {
    "Author": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "",
      "replaces": "$AUTHOR$",
      "description": "The author."
    },
    "CreateDataMinerPackage": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Enables this project to generate a .dmapp and optionally publish to the online catalog as a stand-alone item. For multi-artifact packages please leave this empty and use an additional DataMiner Package Project.",
      "defaultValue": "true",
      "replaces": "$CREATEPACKAGE$"
    },
    "IncludeGitHubWorkflow": {
      "type": "parameter",
      "datatype": "choice",
      "description": "Add/Overwrite a GitHub Workflow: Basic (build, test, publish) or Complete (Skyline Quality Gate). Warning: When adding a new Project to an existing solution or for dotnet-cli this will always be one folder up from your OUTPUT_DIRECTORY.",
      "choices": [
        {
          "choice": "None",
          "description": "None"
        },
        {
          "choice": "Basic",
          "description": "Basic (build, test, publish)"
        },
        {
          "choice": "Complete",
          "description": "Complete (Skyline Quality Gate)"
        }
      ]
    },
    "InitialVersionDate": {
      "type": "generated",
      "generator": "now",
      "replaces": "$INITIALVERSIONDATE$",
      "parameters": {
        "format": "dd/MM/yyyy"
      }
    },
    "Namespace": {
      "type": "derived",
      "valueSource": "name",
      "valueTransform": "invalidChars",
      "replaces": "$NAMESPACE$"
    },
    "WillCreateSolutionOneLevelHigher": {
      "type": "bind",
      "binding": "context:createsolutiondirectory"
    },
    "CreatingNewVSSolution": {
      "type": "bind",
      "binding": "context:isexclusive"
    },
    "HostIdentifier": {
      "type": "bind",
      "binding": "host:HostIdentifier"
    },
    "IsCatalogNoCICD": {
      "type": "computed",
      "value": "(CreateDataMinerPackage) && IncludeGitHubWorkflow == None"
    },
    "IsCatalogBasicCICD": {
      "type": "computed",
      "value": "(CreateDataMinerPackage) && IncludeGitHubWorkflow == Basic"
    },
    "IsCatalogCompleteCICD": {
      "type": "computed",
      "value": "(CreateDataMinerPackage) && IncludeGitHubWorkflow == Complete"
    },
    "PlaceSolutionFilesHigh": {
      "type": "computed",
      "value": "(WillCreateSolutionOneLevelHigher && CreatingNewVSSolution) || !CreatingNewVSSolution"
    }
  },
  "forms": {
    "invalidChars": {
      "identifier": "replace",
      "pattern": "([\\-_\\.\\ ])",
      "replacement": ""
    }
  },
  "guids": [
    "4c5d14ab-9cec-4c0b-8b58-af379fdb4123"
  ],
  "sources": [
    {
      "exclude": [
        "./[Content_Types].xml",
        "src/.vs/**",
        ".template_config/**",
        "[Content_Types].xml",
        "_rels/**",
        "*.nuspec",
        "*.nupkg"
      ]
    },
    {
      "source": "../SharedItems/OnSolutionLevel",
      "target": "../",
      "condition": "(HostIdentifier == dotnetcli || PlaceSolutionFilesHigh)"
    },    
    {
      "source": "../SharedItems/OnSolutionLevel",
      "target": "/",
      "condition": "!(HostIdentifier == dotnetcli) && !PlaceSolutionFilesHigh"
    },
    {
      "source": "../SharedItems/CatalogInformation",
      "target": "CatalogInformation",
      "condition": "CreateDataMinerPackage"
    },
    {
      "source": "../SharedItems/Properties",
      "target": "Properties",
      "condition": "CreateDataMinerPackage"
    },
    {
      "source": "../SharedItems/.github",
      "target": "../.github/",
      "exclude": [
        "**"
      ],
      "condition": "!(IncludeGitHubWorkflow == None) && (HostIdentifier == dotnetcli || PlaceSolutionFilesHigh)",
      "modifiers": [
        {
          "condition": "IncludeGitHubWorkflow == Basic",
          "include": [
            "workflows/basic.yml",
            "dependabot.yml"
          ]
        },
        {
          "condition": "IncludeGitHubWorkflow == Complete",
          "include": [
            "workflows/complete.yml",
            "dependabot.yml"
          ]
        }
      ]
    },
    {
      "source": "../SharedItems/.github",
      "target": ".github/",
      "exclude": [
        "**"
      ],
      "condition": "!(IncludeGitHubWorkflow == None) && !(HostIdentifier == dotnetcli) && !PlaceSolutionFilesHigh",
      "modifiers": [
        {
          "condition": "IncludeGitHubWorkflow == Basic",
          "include": [
            "workflows/basic.yml",
            "dependabot.yml"
          ]
        },
        {
          "condition": "IncludeGitHubWorkflow == Complete",
          "include": [
            "workflows/complete.yml",
            "dependabot.yml"
          ]
        }
      ]
    }
  ],
  "primaryOutputs": [
    {
      "condition": "(HostIdentifier != \"dotnetcli\")",
      "path": "GettingStarted.md"
    }
  ],
  "postActions": [
    {
      "condition": "(HostIdentifier != \"dotnetcli\")",
      "description": "Opens GettingStarted.md in the editor",
      "manualInstructions": [],
      "actionId": "84C0DA21-51C8-4541-9940-6CA19AF04EE6",
      "args": {
        "files": "0"
      },
      "continueOnError": true
    }
  ]
}